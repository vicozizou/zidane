// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bytepoxic.core.model;

import com.bytepoxic.core.model.Location;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Location_Roo_Finder {
    
    public static TypedQuery<Location> Location.findLocationsByCode(String code) {
        if (code == null || code.length() == 0) throw new IllegalArgumentException("The code argument is required");
        EntityManager em = Location.entityManager();
        TypedQuery<Location> q = em.createQuery("SELECT o FROM Location AS o WHERE o.code = :code", Location.class);
        q.setParameter("code", code);
        return q;
    }
    
    public static TypedQuery<Location> Location.findLocationsByName(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = Location.entityManager();
        TypedQuery<Location> q = em.createQuery("SELECT o FROM Location AS o WHERE o.name = :name", Location.class);
        q.setParameter("name", name);
        return q;
    }
    
    public static TypedQuery<Location> Location.findLocationsByParent(Location parent) {
        if (parent == null) throw new IllegalArgumentException("The parent argument is required");
        EntityManager em = Location.entityManager();
        TypedQuery<Location> q = em.createQuery("SELECT o FROM Location AS o WHERE o.parent = :parent", Location.class);
        q.setParameter("parent", parent);
        return q;
    }
    
}
